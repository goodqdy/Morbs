40,47d39
< //mobileDomains:
< #include <wtf/HashMap.h>
< #include <iostream>
< #include <fstream>
< using std::ifstream;
< using std::ofstream;
< //using std::String;
< 
86,118d77
< 
< 	//mobileDomains:
< 	//read file origin configurations into map/hashmap
<     //currently map/hashmap is not used
<     std::string line;
<             std::string filename;
<             std::string fileDomain;
<             unsigned pos = 0;
<    
<             ifstream fileOrigin("/data/fileOrigins.log");
<             //int cter = 0;
<             while(fileOrigin.good()) //loop to read through fileOrigin.log file, each line of file is like /mnt/ajax.html->app://com.example.testfacebookapp2
<             {
<                 getline (fileOrigin,line);     //read a line
<                 pos = line.find("->");       //position of "->"
<                 if(pos!=std::string::npos)
<                 {
<                     filename= "file://" + line.substr(0, pos);
<                     fileDomain = line.substr(pos+2);                               
<                     if(url==String(filename.c_str()))
<                     {//set variables for SOP
<                         m_host = fileDomain.c_str(); //set the host/domain
<                         m_domain = fileDomain.c_str();
<                         m_protocol = "http"; //to pass the same origin policy access control check
<                     }
<                     m_fileOriginsMap[filename] = fileDomain; //add to map
<                     m_wtfFileOriginHashMap.add(String(filename.c_str()), String(fileDomain.c_str())); //add to hashmap, no use currently
<                    
<                 }
<             }
<             fileOrigin.close();   
< 
< 
413,445d371
< 	//mobileDomains:
< 	if(m_protocol == "file")
<     {
< 
<             std::string line;
<             std::string filename;
<             std::string fileDomain;
<             unsigned pos = 0;
<    
<             ifstream fileOrigin("/data/fileOrigins.log");
<             //int cter = 0;
<             while(fileOrigin.good())
<             {
<                 getline (fileOrigin,line);   
<                 pos = line.find("->");
<                 if(pos!=std::string::npos)
<                 {
<                     filename= "file://" + line.substr(0, pos);
<                     fileDomain = line.substr(pos+2);                               
<                
<                     //m_fileOriginsMap[filename] = fileDomain;
<                     //m_wtfFileOriginHashMap.add(String(filename.c_str()), String(fileDomain.c_str()));
<                     if(m_kurl==String(filename.c_str()))
<                         {
<                             fileOrigin.close();                       
<                             return false;
<                         }
<                 }
<             }
<             fileOrigin.close();   
<       
<     }
< 
40,47d39
< //mobileDomains:
< #include <wtf/HashMap.h>
< #include <iostream>
< #include <fstream>
< using std::ifstream;
< using std::ofstream;
< //using std::String;
< 
86,118d77
< 
< 	//mobileDomains:
< 	//read file origin configurations into map/hashmap
<     //currently map/hashmap is not used
<     std::string line;
<             std::string filename;
<             std::string fileDomain;
<             unsigned pos = 0;
<    
<             ifstream fileOrigin("/data/fileOrigins.log");
<             //int cter = 0;
<             while(fileOrigin.good()) //loop to read through fileOrigin.log file, each line of file is like /mnt/ajax.html->app://com.example.testfacebookapp2
<             {
<                 getline (fileOrigin,line);     //read a line
<                 pos = line.find("->");       //position of "->"
<                 if(pos!=std::string::npos)
<                 {
<                     filename= "file://" + line.substr(0, pos);
<                     fileDomain = line.substr(pos+2);                               
<                     if(url==String(filename.c_str()))
<                     {//set variables for SOP
<                         m_host = fileDomain.c_str(); //set the host/domain
<                         m_domain = fileDomain.c_str();
<                         m_protocol = "http"; //to pass the same origin policy access control check
<                     }
<                     m_fileOriginsMap[filename] = fileDomain; //add to map
<                     m_wtfFileOriginHashMap.add(String(filename.c_str()), String(fileDomain.c_str())); //add to hashmap, no use currently
<                    
<                 }
<             }
<             fileOrigin.close();   
< 
< 
413,445d371
< 	//mobileDomains:
< 	if(m_protocol == "file")
<     {
< 
<             std::string line;
<             std::string filename;
<             std::string fileDomain;
<             unsigned pos = 0;
<    
<             ifstream fileOrigin("/data/fileOrigins.log");
<             //int cter = 0;
<             while(fileOrigin.good())
<             {
<                 getline (fileOrigin,line);   
<                 pos = line.find("->");
<                 if(pos!=std::string::npos)
<                 {
<                     filename= "file://" + line.substr(0, pos);
<                     fileDomain = line.substr(pos+2);                               
<                
<                     //m_fileOriginsMap[filename] = fileDomain;
<                     //m_wtfFileOriginHashMap.add(String(filename.c_str()), String(fileDomain.c_str()));
<                     if(m_kurl==String(filename.c_str()))
<                         {
<                             fileOrigin.close();                       
<                             return false;
<                         }
<                 }
<             }
<             fileOrigin.close();   
<       
<     }
< 
