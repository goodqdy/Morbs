19,21d18
< //mobileDomains:
< import android.content.pm.PackageManager;
< 
123,127d119
<     //mobileDomains: 
<     private String allowedOrigins = null; //allowedOrigins for webview APIs
<     private PackageManager pm = null;
<     private String appOrigin = null; //the origin of the host app
< 
176,179d167
< 		//mobileDomains:
< 		pm = mContext.getPackageManager();
< 		appOrigin = "app://" + mContext.getPackageName();
< 
295d282
< 
340,350d326
< 	/**
<      * mobileDomains: implementation of setAllowedOrigins for Webviewcore
<      */
<     public void setAllowedOrigins(String allowedOrigins) {
< 		this.allowedOrigins = allowedOrigins;
< 		if (this.allowedOrigins != null) {
< 			pm.setOriginPolicy(PackageManager.SPECIFY_RECIPIENT_ORIGINS_WEBVIEW,appOrigin,allowedOrigins,mContext.getPackageName()); //set policy
< 			this.allowedOrigins = null;
< 		}
<     }
< 
1286,1287d1261
< 
< 					
1330,1340c1304
< 
< 			    			//mobileDomains: enforce origin policies for APIs
< 							Log.d("mobileDomains","WebViewCore::handleMessage LOAD_URL(url='"+param.mUrl+"') starts at "+System.nanoTime());
< 							String recipientOrigin = Log.getSchmeAndHostFromURL(param.mUrl);
< 			    			if (pm.checkOriginPolicy(PackageManager.CHECK_RECIPIENT_WEBVIEW,appOrigin,recipientOrigin,"") &&
< 								pm.checkOriginPolicy(PackageManager.CHECK_SENDER_WEB,appOrigin,recipientOrigin,mContext.getPackageName())) { //policy check passed
<                             	loadUrl(param.mUrl, param.mExtraHeaders);
< 							} else {
< 								//todo: raise warning, log
< 							}
< 							Log.d("mobileDomains","WebViewCore::handleMessage checkOriginPolicy ends at "+System.nanoTime());
---
>                             loadUrl(param.mUrl, param.mExtraHeaders);
1347,1355c1311
< 
< 							//mobileDomains:
< 							String recipientOrigin = Log.getSchmeAndHostFromURL(param.mUrl);
< 			    			if (pm.checkOriginPolicy(PackageManager.CHECK_RECIPIENT_WEBVIEW,appOrigin,recipientOrigin,"") &&
< 								pm.checkOriginPolicy(PackageManager.CHECK_SENDER_WEB,appOrigin,recipientOrigin,mContext.getPackageName())) { //policy check passed
<                             	mBrowserFrame.postUrl(param.mUrl, param.mPostData);
< 							} else {
< 								//todo: raise warning, log
< 							}
---
>                             mBrowserFrame.postUrl(param.mUrl, param.mPostData);
1380,1391d1335
< 
< 									//mobileDomains:
< 									if (scheme.compareTo("http") == 0 || scheme.compareTo("https") == 0) {
< 										String recipientOrigin = Log.getSchmeAndHostFromURL(baseUrl);
< 										if (!pm.checkOriginPolicy(PackageManager.CHECK_RECIPIENT_WEBVIEW,appOrigin,recipientOrigin,"")) { //policy check failed
< 											//todo: raise warning, log
<                             				break;
< 										} else if (!pm.checkOriginPolicy(PackageManager.CHECK_SENDER_WEB,appOrigin,recipientOrigin,mContext.getPackageName())) {
< 											//todo: raise warning, log
< 											break;
< 										}
< 									}
19,21d18
< //mobileDomains:
< import android.content.pm.PackageManager;
< 
123,127d119
<     //mobileDomains: 
<     private String allowedOrigins = null; //allowedOrigins for webview APIs
<     private PackageManager pm = null;
<     private String appOrigin = null; //the origin of the host app
< 
176,179d167
< 		//mobileDomains:
< 		pm = mContext.getPackageManager();
< 		appOrigin = "app://" + mContext.getPackageName();
< 
295d282
< 
340,350d326
< 	/**
<      * mobileDomains: implementation of setAllowedOrigins for Webviewcore
<      */
<     public void setAllowedOrigins(String allowedOrigins) {
< 		this.allowedOrigins = allowedOrigins;
< 		if (this.allowedOrigins != null) {
< 			pm.setOriginPolicy(PackageManager.SPECIFY_RECIPIENT_ORIGINS_WEBVIEW,appOrigin,allowedOrigins,mContext.getPackageName()); //set policy
< 			this.allowedOrigins = null;
< 		}
<     }
< 
1286,1287d1261
< 
< 					
1330,1340c1304
< 
< 			    			//mobileDomains: enforce origin policies for APIs
< 							Log.d("mobileDomains","WebViewCore::handleMessage LOAD_URL(url='"+param.mUrl+"') starts at "+System.nanoTime());
< 							String recipientOrigin = Log.getSchmeAndHostFromURL(param.mUrl);
< 			    			if (pm.checkOriginPolicy(PackageManager.CHECK_RECIPIENT_WEBVIEW,appOrigin,recipientOrigin,"") &&
< 								pm.checkOriginPolicy(PackageManager.CHECK_SENDER_WEB,appOrigin,recipientOrigin,mContext.getPackageName())) { //policy check passed
<                             	loadUrl(param.mUrl, param.mExtraHeaders);
< 							} else {
< 								//todo: raise warning, log
< 							}
< 							Log.d("mobileDomains","WebViewCore::handleMessage checkOriginPolicy ends at "+System.nanoTime());
---
>                             loadUrl(param.mUrl, param.mExtraHeaders);
1347,1355c1311
< 
< 							//mobileDomains:
< 							String recipientOrigin = Log.getSchmeAndHostFromURL(param.mUrl);
< 			    			if (pm.checkOriginPolicy(PackageManager.CHECK_RECIPIENT_WEBVIEW,appOrigin,recipientOrigin,"") &&
< 								pm.checkOriginPolicy(PackageManager.CHECK_SENDER_WEB,appOrigin,recipientOrigin,mContext.getPackageName())) { //policy check passed
<                             	mBrowserFrame.postUrl(param.mUrl, param.mPostData);
< 							} else {
< 								//todo: raise warning, log
< 							}
---
>                             mBrowserFrame.postUrl(param.mUrl, param.mPostData);
1380,1391d1335
< 
< 									//mobileDomains:
< 									if (scheme.compareTo("http") == 0 || scheme.compareTo("https") == 0) {
< 										String recipientOrigin = Log.getSchmeAndHostFromURL(baseUrl);
< 										if (!pm.checkOriginPolicy(PackageManager.CHECK_RECIPIENT_WEBVIEW,appOrigin,recipientOrigin,"")) { //policy check failed
< 											//todo: raise warning, log
<                             				break;
< 										} else if (!pm.checkOriginPolicy(PackageManager.CHECK_SENDER_WEB,appOrigin,recipientOrigin,mContext.getPackageName())) {
< 											//todo: raise warning, log
< 											break;
< 										}
< 									}
19,21d18
< //mobileDomains:
< import android.content.pm.PackageManager;
< 
123,127d119
<     //mobileDomains: 
<     private String allowedOrigins = null; //allowedOrigins for webview APIs
<     private PackageManager pm = null;
<     private String appOrigin = null; //the origin of the host app
< 
176,179d167
< 		//mobileDomains:
< 		pm = mContext.getPackageManager();
< 		appOrigin = "app://" + mContext.getPackageName();
< 
295d282
< 
340,350d326
< 	/**
<      * mobileDomains: implementation of setAllowedOrigins for Webviewcore
<      */
<     public void setAllowedOrigins(String allowedOrigins) {
< 		this.allowedOrigins = allowedOrigins;
< 		if (this.allowedOrigins != null) {
< 			pm.setOriginPolicy(PackageManager.SPECIFY_RECIPIENT_ORIGINS_WEBVIEW,appOrigin,allowedOrigins,mContext.getPackageName()); //set policy
< 			this.allowedOrigins = null;
< 		}
<     }
< 
1286,1287d1261
< 
< 					
1330,1340c1304
< 
< 			    			//mobileDomains: enforce origin policies for APIs
< 							Log.d("mobileDomains","WebViewCore::handleMessage LOAD_URL(url='"+param.mUrl+"') starts at "+System.nanoTime());
< 							String recipientOrigin = Log.getSchmeAndHostFromURL(param.mUrl);
< 			    			if (pm.checkOriginPolicy(PackageManager.CHECK_RECIPIENT_WEBVIEW,appOrigin,recipientOrigin,"") &&
< 								pm.checkOriginPolicy(PackageManager.CHECK_SENDER_WEB,appOrigin,recipientOrigin,mContext.getPackageName())) { //policy check passed
<                             	loadUrl(param.mUrl, param.mExtraHeaders);
< 							} else {
< 								//todo: raise warning, log
< 							}
< 							Log.d("mobileDomains","WebViewCore::handleMessage checkOriginPolicy ends at "+System.nanoTime());
---
>                             loadUrl(param.mUrl, param.mExtraHeaders);
1347,1355c1311
< 
< 							//mobileDomains:
< 							String recipientOrigin = Log.getSchmeAndHostFromURL(param.mUrl);
< 			    			if (pm.checkOriginPolicy(PackageManager.CHECK_RECIPIENT_WEBVIEW,appOrigin,recipientOrigin,"") &&
< 								pm.checkOriginPolicy(PackageManager.CHECK_SENDER_WEB,appOrigin,recipientOrigin,mContext.getPackageName())) { //policy check passed
<                             	mBrowserFrame.postUrl(param.mUrl, param.mPostData);
< 							} else {
< 								//todo: raise warning, log
< 							}
---
>                             mBrowserFrame.postUrl(param.mUrl, param.mPostData);
1380,1391d1335
< 
< 									//mobileDomains:
< 									if (scheme.compareTo("http") == 0 || scheme.compareTo("https") == 0) {
< 										String recipientOrigin = Log.getSchmeAndHostFromURL(baseUrl);
< 										if (!pm.checkOriginPolicy(PackageManager.CHECK_RECIPIENT_WEBVIEW,appOrigin,recipientOrigin,"")) { //policy check failed
< 											//todo: raise warning, log
<                             				break;
< 										} else if (!pm.checkOriginPolicy(PackageManager.CHECK_SENDER_WEB,appOrigin,recipientOrigin,mContext.getPackageName())) {
< 											//todo: raise warning, log
< 											break;
< 										}
< 									}
