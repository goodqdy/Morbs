19,21d18
< //mobileDomains:
< import android.content.pm.PackageManager;
< 
85,89d81
<     //mobileDomains:
<     private PackageManager pm = null;
<     private String appOrigin = null; //the origin of the host app
<     private WebViewClient tempWebViewClient = null; //the variable temporarily stores mWebViewClient;
< 
196,199d187
< 
< 		//mobileDomains:
< 		pm = mContext.getPackageManager();
< 		appOrigin = "app://" + mContext.getPackageName();
205,208d192
< 	//mobileDomains: use this to control when to block messages
< 	protected synchronized void blockMessages(boolean block) {
<         mBlockMessages = block;
<     }
325,360d308
< 
< 		//mobileDomains: set origin policy for callbacks
< 		Log.d("mobileDomains","CallbackProxy::handleMessage is called at "+System.nanoTime());
< 		if (mWebViewClient != null && tempWebViewClient == null) {
< 		    tempWebViewClient = mWebViewClient; //save mWebViewClient to temp
< 		    mWebViewClient = null;
< 
< 			String allowedSenderOrigins = tempWebViewClient.getAllowedOrigins();
< 			if (allowedSenderOrigins != null) {
< 			    pm.setOriginPolicy(PackageManager.SPECIFY_SENDER_ORIGINS_WEBVIEWCLIENT,appOrigin,allowedSenderOrigins,""); //set policy. there is no need for entry point
< 				tempWebViewClient.setAllowedOrigins(null);
< 			}
< 		}
< 		//enforce policy
< 		if (tempWebViewClient != null) {
< 			String senderOrigin = msg.getData().getString("url");
< 			if (senderOrigin != null) {
< 				Log.d("mobileDomains","CallbackProxy::handle URL '"+senderOrigin+"'");
< 		    	senderOrigin = Log.getSchmeAndHostFromURL(senderOrigin); //extract the scheme://host part
< 				if (appOrigin.compareTo("app://com.android.browser") != 0) { //webview scenario
< 		    		if (pm.checkOriginPolicy(PackageManager.CHECK_SENDER_WEBVIEWCLIENT,senderOrigin,appOrigin,"") &&
< 						pm.checkOriginPolicy(PackageManager.CHECK_RECIPIENT_WEB,senderOrigin,appOrigin,mContext.getPackageName())) { //policy check passed
< 						mWebViewClient = tempWebViewClient; //allow mWebViewClient to be used in future code
< 		    		} else {
< 						mWebViewClient = null;
< 					}
< 				} else { //browser scenario
< 					mWebViewClient = tempWebViewClient; //we let it go here, and will check it in BrowserFrame.java
< 				}
< 			} else {
< 				mWebViewClient = tempWebViewClient;
< 			}
<     	}
< 		Log.d("mobileDomains","CallbackProxy::handleMessage checkOriginPolicy ends at "+System.nanoTime());
< 		
< 
364,367d311
< 
< 				//mobileDomains: performance test
< 				Log.d("mobileDomains","CallbackProxy::handleMessage onPageStarted(url='"+startedUrl+"') is called at "+System.nanoTime());
< 
381,383d324
< 
< 				//mobileDomains: performance test
< 				Log.d("mobileDomains","CallbackProxy::handleMessage onPageFinished(url='"+finishedUrl+"') ends at "+System.nanoTime());
